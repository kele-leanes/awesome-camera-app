diff --git a/node_modules/react-native-vision-camera/android/build/generated/source/buildConfig/debug/com/mrousavy/camera/BuildConfig.java b/node_modules/react-native-vision-camera/android/build/generated/source/buildConfig/debug/com/mrousavy/camera/BuildConfig.java
new file mode 100644
index 0000000..cd10e12
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/generated/source/buildConfig/debug/com/mrousavy/camera/BuildConfig.java
@@ -0,0 +1,12 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.mrousavy.camera;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String LIBRARY_PACKAGE_NAME = "com.mrousavy.camera";
+  public static final String BUILD_TYPE = "debug";
+  // Field from default config.
+  public static final boolean IS_NEW_ARCHITECTURE_ENABLED = false;
+}
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/FrameHostObject.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/FrameHostObject.h
new file mode 100644
index 0000000..c7fa941
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/FrameHostObject.h
@@ -0,0 +1,37 @@
+//
+// Created by Marc on 19/06/2021.
+//
+
+#pragma once
+
+#include <fbjni/fbjni.h>
+#include <jni.h>
+#include <jsi/jsi.h>
+#include <memory>
+#include <string>
+#include <vector>
+
+#include "JFrame.h"
+
+namespace vision {
+
+using namespace facebook;
+
+class JSI_EXPORT FrameHostObject : public jsi::HostObject, public std::enable_shared_from_this<FrameHostObject> {
+public:
+  explicit FrameHostObject(const jni::alias_ref<JFrame::javaobject>& frame);
+  ~FrameHostObject();
+
+public:
+  jsi::Value get(jsi::Runtime&, const jsi::PropNameID& name) override;
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& rt) override;
+
+public:
+  jni::global_ref<JFrame> getFrame();
+
+private:
+  jni::global_ref<JFrame> _frame;
+  std::unique_ptr<jsi::Object> _baseClass;
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/FrameProcessorPluginHostObject.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/FrameProcessorPluginHostObject.h
new file mode 100644
index 0000000..1f2a94f
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/FrameProcessorPluginHostObject.h
@@ -0,0 +1,30 @@
+//
+// Created by Marc Rousavy on 21.07.23.
+//
+
+#pragma once
+
+#include "JFrameProcessorPlugin.h"
+#include <fbjni/fbjni.h>
+#include <jsi/jsi.h>
+#include <memory>
+#include <vector>
+
+namespace vision {
+
+using namespace facebook;
+
+class FrameProcessorPluginHostObject : public jsi::HostObject {
+public:
+  explicit FrameProcessorPluginHostObject(jni::alias_ref<JFrameProcessorPlugin::javaobject> plugin);
+  ~FrameProcessorPluginHostObject();
+
+public:
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override;
+  jsi::Value get(jsi::Runtime& runtime, const jsi::PropNameID& name) override;
+
+private:
+  jni::global_ref<JFrameProcessorPlugin::javaobject> _plugin;
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JFrame.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JFrame.h
new file mode 100644
index 0000000..802b575
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JFrame.h
@@ -0,0 +1,40 @@
+//
+// Created by Marc on 21.07.2023.
+//
+
+#pragma once
+
+#include "JOrientation.h"
+#include "JPixelFormat.h"
+#include <fbjni/fbjni.h>
+#include <jni.h>
+
+#include <android/hardware_buffer.h>
+
+namespace vision {
+
+using namespace facebook;
+using namespace jni;
+
+struct JFrame : public JavaClass<JFrame> {
+  static constexpr auto kJavaDescriptor = "Lcom/mrousavy/camera/frameprocessors/Frame;";
+
+public:
+  int getWidth() const;
+  int getHeight() const;
+  bool getIsValid() const;
+  bool getIsMirrored() const;
+  int getPlanesCount() const;
+  int getBytesPerRow() const;
+  jlong getTimestamp() const;
+  local_ref<JOrientation> getOrientation() const;
+  local_ref<JPixelFormat> getPixelFormat() const;
+#if __ANDROID_API__ >= 26
+  AHardwareBuffer* getHardwareBuffer() const;
+#endif
+
+  void incrementRefCount();
+  void decrementRefCount();
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JFrameProcessor.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JFrameProcessor.h
new file mode 100644
index 0000000..c164290
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JFrameProcessor.h
@@ -0,0 +1,52 @@
+//
+// Created by Marc Rousavy on 29.09.21
+//
+
+#pragma once
+
+#if VISION_CAMERA_ENABLE_FRAME_PROCESSORS
+
+#include <fbjni/fbjni.h>
+#include <jni.h>
+#include <memory>
+#include <string>
+
+#include <react-native-worklets-core/WKTJsiHostObject.h>
+#include <react-native-worklets-core/WKTJsiWorklet.h>
+
+#include "FrameHostObject.h"
+#include "JFrame.h"
+
+namespace vision {
+
+using namespace facebook;
+
+struct JFrameProcessor : public jni::HybridClass<JFrameProcessor> {
+public:
+  static auto constexpr kJavaDescriptor = "Lcom/mrousavy/camera/frameprocessors/FrameProcessor;";
+  static void registerNatives();
+  static jni::local_ref<JFrameProcessor::javaobject> create(const std::shared_ptr<RNWorklet::JsiWorklet>& worklet,
+                                                            const std::shared_ptr<RNWorklet::JsiWorkletContext>& context);
+
+public:
+  /**
+   * Call the JS Frame Processor.
+   */
+  void call(alias_ref<JFrame::javaobject> frame);
+
+private:
+  // Private constructor. Use `create(..)` to create new instances.
+  explicit JFrameProcessor(std::shared_ptr<RNWorklet::JsiWorklet> worklet, std::shared_ptr<RNWorklet::JsiWorkletContext> context);
+
+private:
+  void callWithFrameHostObject(const std::shared_ptr<FrameHostObject>& frameHostObject) const;
+
+private:
+  friend HybridBase;
+  std::shared_ptr<RNWorklet::WorkletInvoker> _workletInvoker;
+  std::shared_ptr<RNWorklet::JsiWorkletContext> _workletContext;
+};
+
+} // namespace vision
+
+#endif
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JFrameProcessorPlugin.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JFrameProcessorPlugin.h
new file mode 100644
index 0000000..4d07c29
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JFrameProcessorPlugin.h
@@ -0,0 +1,28 @@
+//
+// Created by Marc Rousavy on 29.09.21
+//
+
+#pragma once
+
+#include <fbjni/fbjni.h>
+#include <jni.h>
+#include <string>
+
+#include "JFrame.h"
+
+namespace vision {
+
+using namespace facebook;
+using namespace jni;
+
+struct JFrameProcessorPlugin : public JavaClass<JFrameProcessorPlugin> {
+  static constexpr auto kJavaDescriptor = "Lcom/mrousavy/camera/frameprocessors/FrameProcessorPlugin;";
+
+public:
+  /**
+   * Call the plugin.
+   */
+  local_ref<jobject> callback(const alias_ref<JFrame::javaobject>& frame, const alias_ref<JMap<jstring, jobject>>& params) const;
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JJSUnionValue.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JJSUnionValue.h
new file mode 100644
index 0000000..4e82ab8
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JJSUnionValue.h
@@ -0,0 +1,24 @@
+//
+// Created by Marc Rousavy on 29.12.23.
+//
+
+#pragma once
+
+#include <fbjni/fbjni.h>
+#include <jni.h>
+
+namespace vision {
+
+using namespace facebook;
+using namespace jni;
+
+struct JJSUnionValue : public JavaClass<JJSUnionValue> {
+  static constexpr auto kJavaDescriptor = "Lcom/mrousavy/camera/core/types/JSUnionValue;";
+
+  local_ref<JString> getUnionValue() {
+    const auto getUnionValueMethod = getClass()->getMethod<JString()>("getUnionValue");
+    return getUnionValueMethod(self());
+  }
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JOrientation.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JOrientation.h
new file mode 100644
index 0000000..971351b
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JOrientation.h
@@ -0,0 +1,20 @@
+//
+// Created by Marc Rousavy on 29.12.23.
+//
+
+#pragma once
+
+#include "JJSUnionValue.h"
+#include <fbjni/fbjni.h>
+#include <jni.h>
+
+namespace vision {
+
+using namespace facebook;
+using namespace jni;
+
+struct JOrientation : public JavaClass<JOrientation, JJSUnionValue> {
+  static constexpr auto kJavaDescriptor = "Lcom/mrousavy/camera/core/types/Orientation;";
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JPixelFormat.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JPixelFormat.h
new file mode 100644
index 0000000..af2a61b
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JPixelFormat.h
@@ -0,0 +1,20 @@
+//
+// Created by Marc Rousavy on 29.12.23.
+//
+
+#pragma once
+
+#include "JJSUnionValue.h"
+#include <fbjni/fbjni.h>
+#include <jni.h>
+
+namespace vision {
+
+using namespace facebook;
+using namespace jni;
+
+struct JPixelFormat : public JavaClass<JPixelFormat, JJSUnionValue> {
+  static constexpr auto kJavaDescriptor = "Lcom/mrousavy/camera/core/types/PixelFormat;";
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JSIJNIConversion.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JSIJNIConversion.h
new file mode 100644
index 0000000..50b9ea0
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JSIJNIConversion.h
@@ -0,0 +1,24 @@
+//
+// Created by Marc Rousavy on 22.06.21.
+//
+
+#pragma once
+
+#include <fbjni/fbjni.h>
+#include <jni.h>
+#include <jsi/jsi.h>
+
+namespace vision {
+
+namespace JSIJNIConversion {
+
+  using namespace facebook;
+
+  jni::local_ref<jobject> convertJSIValueToJNIObject(jsi::Runtime& runtime, const jsi::Value& value);
+  jni::local_ref<jni::JMap<jstring, jobject>> convertJSIObjectToJNIMap(jsi::Runtime& runtime, const jsi::Object& object);
+
+  jsi::Value convertJNIObjectToJSIValue(jsi::Runtime& runtime, const jni::local_ref<jobject>& object);
+
+} // namespace JSIJNIConversion
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JSharedArray.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JSharedArray.h
new file mode 100644
index 0000000..4069c2d
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JSharedArray.h
@@ -0,0 +1,51 @@
+//
+// Created by Marc Rousavy on 12.01.24.
+//
+
+#pragma once
+
+#include "JVisionCameraProxy.h"
+#include "MutableJByteBuffer.h"
+#include <fbjni/ByteBuffer.h>
+#include <fbjni/fbjni.h>
+#include <jni.h>
+
+namespace vision {
+
+using namespace facebook;
+
+class JSharedArray : public jni::HybridClass<JSharedArray> {
+public:
+  static auto constexpr kJavaDescriptor = "Lcom/mrousavy/camera/frameprocessors/SharedArray;";
+  static void registerNatives();
+
+public:
+  static jni::local_ref<JSharedArray::javaobject> create(jsi::Runtime& runtime, jsi::ArrayBuffer arrayBuffer);
+
+public:
+  jint getSize();
+  jni::global_ref<jni::JByteBuffer> getByteBuffer();
+  std::shared_ptr<jsi::ArrayBuffer> getArrayBuffer();
+
+private:
+  static auto constexpr TAG = "SharedArray";
+  friend HybridBase;
+  jni::global_ref<javaobject> _javaPart;
+  jni::global_ref<jni::JByteBuffer> _byteBuffer;
+  std::shared_ptr<jsi::ArrayBuffer> _arrayBuffer;
+  int _size;
+
+private:
+  explicit JSharedArray(jsi::Runtime& runtime, std::shared_ptr<jsi::ArrayBuffer> arrayBuffer);
+  explicit JSharedArray(const jni::alias_ref<jhybridobject>& javaThis, const jni::alias_ref<JVisionCameraProxy::javaobject>& proxy,
+                        int size);
+  explicit JSharedArray(const jni::alias_ref<jhybridobject>& javaThis, const jni::alias_ref<JVisionCameraProxy::javaobject>& proxy,
+                        jni::alias_ref<JByteBuffer> byteBuffer);
+  static jni::local_ref<jhybriddata> initHybridAllocate(jni::alias_ref<jhybridobject> javaThis,
+                                                        jni::alias_ref<JVisionCameraProxy::javaobject> proxy, jint size);
+  static jni::local_ref<jhybriddata> initHybridWrap(jni::alias_ref<jhybridobject> javaThis,
+                                                    jni::alias_ref<JVisionCameraProxy::javaobject> proxy,
+                                                    jni::alias_ref<JByteBuffer> byteBuffer);
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JVisionCameraProxy.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JVisionCameraProxy.h
new file mode 100644
index 0000000..d06eaa8
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JVisionCameraProxy.h
@@ -0,0 +1,69 @@
+//
+// Created by Marc Rousavy on 21.07.23.
+//
+
+#pragma once
+
+#include <ReactCommon/CallInvokerHolder.h>
+#include <fbjni/fbjni.h>
+#include <jsi/jsi.h>
+
+#include "JFrameProcessor.h"
+#include "JFrameProcessorPlugin.h"
+#include "JVisionCameraScheduler.h"
+
+#include <memory>
+#include <string>
+
+#if VISION_CAMERA_ENABLE_FRAME_PROCESSORS
+#include <react-native-worklets-core/WKTJsiWorkletContext.h>
+#endif
+
+namespace vision {
+
+using namespace facebook;
+
+class JVisionCameraProxy : public jni::HybridClass<JVisionCameraProxy> {
+public:
+  ~JVisionCameraProxy();
+  static void registerNatives();
+
+  void setFrameProcessor(int viewTag, jsi::Runtime& runtime, const std::shared_ptr<jsi::Function>& frameProcessor);
+  void removeFrameProcessor(int viewTag);
+  jni::local_ref<JFrameProcessorPlugin::javaobject> initFrameProcessorPlugin(const std::string& name,
+                                                                             jni::local_ref<JMap<jstring, jobject>> options);
+
+  jsi::Runtime* getJSRuntime() {
+    return _runtime;
+  }
+
+#if VISION_CAMERA_ENABLE_FRAME_PROCESSORS
+  jsi::Runtime& getWorkletRuntime() {
+    return _workletContext->getWorkletRuntime();
+  }
+
+  std::shared_ptr<RNWorklet::JsiWorkletContext> getWorkletContext() {
+    return _workletContext;
+  }
+#endif
+
+private:
+  friend HybridBase;
+  jni::global_ref<JVisionCameraProxy::javaobject> _javaPart;
+  jsi::Runtime* _runtime;
+#if VISION_CAMERA_ENABLE_FRAME_PROCESSORS
+  std::shared_ptr<RNWorklet::JsiWorkletContext> _workletContext;
+#endif
+
+  static auto constexpr TAG = "VisionCameraProxy";
+  static auto constexpr kJavaDescriptor = "Lcom/mrousavy/camera/frameprocessors/VisionCameraProxy;";
+
+  explicit JVisionCameraProxy(const jni::alias_ref<JVisionCameraProxy::jhybridobject>& javaThis, jsi::Runtime* jsRuntime,
+                              const std::shared_ptr<facebook::react::CallInvoker>& jsCallInvoker,
+                              const jni::global_ref<JVisionCameraScheduler::javaobject>& scheduler);
+  static jni::local_ref<jhybriddata> initHybrid(jni::alias_ref<jhybridobject> javaThis, jlong jsRuntimePointer,
+                                                jni::alias_ref<facebook::react::CallInvokerHolder::javaobject> jsCallInvokerHolder,
+                                                const jni::alias_ref<JVisionCameraScheduler::javaobject>& scheduler);
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JVisionCameraScheduler.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JVisionCameraScheduler.h
new file mode 100644
index 0000000..3c153fd
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/JVisionCameraScheduler.h
@@ -0,0 +1,49 @@
+//
+// Created by Marc Rousavy on 25.07.21.
+//
+
+#pragma once
+
+#include <fbjni/fbjni.h>
+#include <jni.h>
+#include <mutex>
+#include <queue>
+
+namespace vision {
+
+using namespace facebook;
+
+/**
+ * A Scheduler that runs methods on the Frame Processor Thread (which is a Java Thread).
+ * In order to call something on the Java Frame Processor Thread, you have to:
+ *
+ * 1. Call `dispatchAsync(..)` with the given C++ Method.
+ * 2. Internally, `scheduleTrigger()` will get called, which is a Java Method.
+ * 3. The `scheduleTrigger()` Java Method will switch to the Frame Processor Java Thread and call
+ * `trigger()` on there
+ * 4. `trigger()` is a C++ function here that just calls the passed C++ Method from step 1.
+ */
+class JVisionCameraScheduler : public jni::HybridClass<JVisionCameraScheduler> {
+public:
+  static auto constexpr kJavaDescriptor = "Lcom/mrousavy/camera/frameprocessors/VisionCameraScheduler;";
+  static jni::local_ref<jhybriddata> initHybrid(jni::alias_ref<jhybridobject> jThis);
+  static void registerNatives();
+
+  // schedules the given job to be run on the VisionCamera FP Thread at some future point in time
+  void dispatchAsync(const std::function<void()>& job);
+
+private:
+  friend HybridBase;
+  jni::global_ref<JVisionCameraScheduler::javaobject> _javaPart;
+  std::queue<std::function<void()>> _jobs;
+  std::mutex _mutex;
+
+  explicit JVisionCameraScheduler(jni::alias_ref<JVisionCameraScheduler::jhybridobject> jThis) : _javaPart(jni::make_global(jThis)) {}
+
+  // Schedules a call to `trigger` on the VisionCamera FP Thread
+  void scheduleTrigger();
+  // Calls the latest job in the job queue
+  void trigger();
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/MutableJByteBuffer.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/MutableJByteBuffer.h
new file mode 100644
index 0000000..421af3e
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/MutableJByteBuffer.h
@@ -0,0 +1,33 @@
+//
+// Created by Marc Rousavy on 17.01.24.
+//
+
+#pragma once
+
+#include <fbjni/ByteBuffer.h>
+#include <fbjni/fbjni.h>
+#include <jsi/jsi.h>
+#include <memory>
+
+namespace vision {
+
+using namespace facebook;
+
+class MutableJByteBuffer : public jsi::MutableBuffer {
+public:
+  /**
+   * Wraps the given JByteBuffer in a MutableBuffer for use in JS.
+   */
+  explicit MutableJByteBuffer(jni::alias_ref<jni::JByteBuffer> byteBuffer);
+  ~MutableJByteBuffer();
+
+public:
+  uint8_t* data() override;
+  size_t size() const override;
+  jni::global_ref<jni::JByteBuffer> getByteBuffer();
+
+private:
+  jni::global_ref<jni::JByteBuffer> _byteBuffer;
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/MutableRawBuffer.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/MutableRawBuffer.h
new file mode 100644
index 0000000..43121c2
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/MutableRawBuffer.h
@@ -0,0 +1,48 @@
+//
+//  MutableRawBuffer.h
+//  VisionCamera
+//
+//  Created by Marc Rousavy on 17.01.24.
+//  Copyright © 2024 mrousavy. All rights reserved.
+//
+
+#pragma once
+
+#include <jsi/jsi.h>
+#include <memory>
+
+namespace vision {
+
+using namespace facebook;
+
+class MutableRawBuffer : public jsi::MutableBuffer {
+
+public:
+  explicit MutableRawBuffer(uint8_t* data, size_t size, bool freeOnDealloc) {
+    _size = size;
+    _data = data;
+    _freeOnDealloc = freeOnDealloc;
+  }
+  explicit MutableRawBuffer(size_t size) : MutableRawBuffer(new uint8_t[size], size, true) {}
+
+  ~MutableRawBuffer() {
+    if (_freeOnDealloc) {
+      delete[] _data;
+    }
+  }
+
+public:
+  uint8_t* data() override {
+    return _data;
+  }
+  size_t size() const override {
+    return _size;
+  }
+
+private:
+  uint8_t* _data;
+  size_t _size;
+  bool _freeOnDealloc;
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/VisionCameraProxy.h b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/VisionCameraProxy.h
new file mode 100644
index 0000000..6dc8fde
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/headers/visioncamera/react-native-vision-camera/VisionCameraProxy.h
@@ -0,0 +1,45 @@
+//
+// Created by Marc Rousavy on 21.07.23.
+//
+
+#pragma once
+
+#include <jsi/jsi.h>
+
+#include "JVisionCameraProxy.h"
+#include "JVisionCameraScheduler.h"
+
+#include <string>
+#include <vector>
+
+namespace vision {
+
+using namespace facebook;
+
+class VisionCameraProxy : public jsi::HostObject {
+public:
+  explicit VisionCameraProxy(const jni::alias_ref<JVisionCameraProxy::javaobject>& javaProxy);
+  ~VisionCameraProxy();
+
+public:
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override;
+  jsi::Value get(jsi::Runtime& runtime, const jsi::PropNameID& name) override;
+
+private:
+  void setFrameProcessor(int viewTag, jsi::Runtime& runtime, const std::shared_ptr<jsi::Function>& frameProcessor);
+  void removeFrameProcessor(int viewTag);
+  jsi::Value initFrameProcessorPlugin(jsi::Runtime& runtime, const std::string& name, const jsi::Object& options);
+
+private:
+  jni::global_ref<JVisionCameraProxy::javaobject> _javaProxy;
+  static constexpr const char* TAG = "VisionCameraProxy";
+};
+
+class VisionCameraInstaller : public jni::JavaClass<VisionCameraInstaller> {
+public:
+  static auto constexpr kJavaDescriptor = "Lcom/mrousavy/camera/frameprocessors/VisionCameraInstaller;";
+  static void registerNatives();
+  static void install(jni::alias_ref<jni::JClass> clazz, jni::alias_ref<JVisionCameraProxy::javaobject> proxy);
+};
+
+} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/AndroidManifest.xml b/node_modules/react-native-vision-camera/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/AndroidManifest.xml
new file mode 100644
index 0000000..424bb4b
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mrousavy.camera" >
+
+    <uses-sdk android:minSdkVersion="23" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/output-metadata.json b/node_modules/react-native-vision-camera/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/output-metadata.json
new file mode 100644
index 0000000..72bb9f3
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "AAPT_FRIENDLY_MERGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.mrousavy.camera",
+  "variantName": "debug",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/aar_metadata/debug/aar-metadata.properties b/node_modules/react-native-vision-camera/android/build/intermediates/aar_metadata/debug/aar-metadata.properties
new file mode 100644
index 0000000..1211b1e
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/aar_metadata/debug/aar-metadata.properties
@@ -0,0 +1,6 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minCompileSdkExtension=0
+minAndroidGradlePluginVersion=1.0.0
+coreLibraryDesugaringEnabled=false
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/annotation_processor_list/debug/annotationProcessors.json b/node_modules/react-native-vision-camera/android/build/intermediates/annotation_processor_list/debug/annotationProcessors.json
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/annotation_processor_list/debug/annotationProcessors.json
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/compile_r_class_jar/debug/R.jar b/node_modules/react-native-vision-camera/android/build/intermediates/compile_r_class_jar/debug/R.jar
new file mode 100644
index 0000000..d389895
Binary files /dev/null and b/node_modules/react-native-vision-camera/android/build/intermediates/compile_r_class_jar/debug/R.jar differ
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/compile_symbol_list/debug/R.txt b/node_modules/react-native-vision-camera/android/build/intermediates/compile_symbol_list/debug/R.txt
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties b/node_modules/react-native-vision-camera/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
new file mode 100644
index 0000000..0a86528
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
@@ -0,0 +1 @@
+#Tue Jun 11 20:00:00 ART 2024
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml b/node_modules/react-native-vision-camera/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
new file mode 100644
index 0000000..cca2766
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/build/generated/res/resValues/debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated" generated-set="generated$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/build/generated/res/resValues/debug"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/incremental/mergeDebugShaders/merger.xml b/node_modules/react-native-vision-camera/android/build/intermediates/incremental/mergeDebugShaders/merger.xml
new file mode 100644
index 0000000..7c76daf
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/incremental/mergeDebugShaders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/shaders"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/debug/shaders"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/incremental/packageDebugAssets/merger.xml b/node_modules/react-native-vision-camera/android/build/intermediates/incremental/packageDebugAssets/merger.xml
new file mode 100644
index 0000000..e08af37
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/incremental/packageDebugAssets/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/assets"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/debug/assets"/></dataSet><dataSet config="generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/build/intermediates/shader_assets/debug/out"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/local_only_symbol_list/debug/R-def.txt b/node_modules/react-native-vision-camera/android/build/intermediates/local_only_symbol_list/debug/R-def.txt
new file mode 100644
index 0000000..78ac5b8
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/local_only_symbol_list/debug/R-def.txt
@@ -0,0 +1,2 @@
+R_DEF: Internal format may change without notice
+local
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt b/node_modules/react-native-vision-camera/android/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt
new file mode 100644
index 0000000..3c105b5
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt
@@ -0,0 +1,7 @@
+1<?xml version="1.0" encoding="utf-8"?>
+2<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+3    package="com.mrousavy.camera" >
+4
+5    <uses-sdk android:minSdkVersion="23" />
+6
+7</manifest>
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/merged_manifest/debug/AndroidManifest.xml b/node_modules/react-native-vision-camera/android/build/intermediates/merged_manifest/debug/AndroidManifest.xml
new file mode 100644
index 0000000..424bb4b
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/merged_manifest/debug/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mrousavy.camera" >
+
+    <uses-sdk android:minSdkVersion="23" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/navigation_json/debug/navigation.json b/node_modules/react-native-vision-camera/android/build/intermediates/navigation_json/debug/navigation.json
new file mode 100644
index 0000000..0637a08
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/navigation_json/debug/navigation.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/prefab_package_header_only/prefab_publication.json/debug b/node_modules/react-native-vision-camera/android/build/intermediates/prefab_package_header_only/prefab_publication.json/debug
new file mode 100644
index 0000000..491b34a
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/prefab_package_header_only/prefab_publication.json/debug
@@ -0,0 +1,17 @@
+{
+  "installationFolder": "/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/build/intermediates/prefab_package/debug/prefab",
+  "gradlePath": ":react-native-vision-camera",
+  "packageInfo": {
+    "packageName": "react-native-vision-camera",
+    "packageSchemaVersion": 2,
+    "packageDependencies": [],
+    "modules": [
+      {
+        "moduleName": "VisionCamera",
+        "moduleHeaders": "/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/build/headers/visioncamera",
+        "moduleExportLibraries": [],
+        "abis": []
+      }
+    ]
+  }
+}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/prefab_package_header_only/prefab_publication.json/release b/node_modules/react-native-vision-camera/android/build/intermediates/prefab_package_header_only/prefab_publication.json/release
new file mode 100644
index 0000000..1413c4b
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/prefab_package_header_only/prefab_publication.json/release
@@ -0,0 +1,17 @@
+{
+  "installationFolder": "/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/build/intermediates/prefab_package/release/prefab",
+  "gradlePath": ":react-native-vision-camera",
+  "packageInfo": {
+    "packageName": "react-native-vision-camera",
+    "packageSchemaVersion": 2,
+    "packageDependencies": [],
+    "modules": [
+      {
+        "moduleName": "VisionCamera",
+        "moduleHeaders": "/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/build/headers/visioncamera",
+        "moduleExportLibraries": [],
+        "abis": []
+      }
+    ]
+  }
+}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/intermediates/symbol_list_with_package_name/debug/package-aware-r.txt b/node_modules/react-native-vision-camera/android/build/intermediates/symbol_list_with_package_name/debug/package-aware-r.txt
new file mode 100644
index 0000000..4f75aa2
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/intermediates/symbol_list_with_package_name/debug/package-aware-r.txt
@@ -0,0 +1 @@
+com.mrousavy.camera
diff --git a/node_modules/react-native-vision-camera/android/build/kotlin/compileDebugKotlin/cacheable/dirty-sources.txt b/node_modules/react-native-vision-camera/android/build/kotlin/compileDebugKotlin/cacheable/dirty-sources.txt
new file mode 100644
index 0000000..2b60900
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/kotlin/compileDebugKotlin/cacheable/dirty-sources.txt
@@ -0,0 +1,71 @@
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/ShutterType.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/OrientationManager.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CameraError.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CodeScannerPipeline.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/utils/runOnUiThread.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/CameraViewManager.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/utils/withPromise.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/JSUnionValue.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CameraConfiguration.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/CameraDeviceFormat.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CameraSession.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/Position.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/OutputOrientation.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/CameraInfo+id.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/Video.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/VideoCodec.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/Torch.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/CameraSelector+byId.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/PermissionStatus.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/Orientation.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/Events.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/FrameProcessorPipeline.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/CameraView+Focus.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/ResizeMode.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/ImageAnalysis.Builder+setTargetFrameRate.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/QualityBalance.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/HardwareLevel.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/CameraView+RecordVideo.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/MetadataProvider.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/utils/CallbackPromise.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/CodeScannerOptions.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/StateError+toCameraError.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/CameraDevicesManager.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/DeviceType.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/CameraView+Events.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/Photo.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/Flash.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/utils/ImageFormatUtils.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/CodeType.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CodeScannerFrame.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/CameraView+TakeSnapshot.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/CameraPackage.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/ListenableFuture+await.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CameraSession+Focus.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CameraDeviceDetails.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/PreviewViewType.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CameraSession+Video.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/CameraViewModule.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/Size+compareTo.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/extensions/List+toJSValue.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/PixelFormat.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/RecordVideoOptions.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CameraQueues.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/CameraSelector+withExtension.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/extensions/ViewGroup+installHierarchyFitter.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CameraSession+Configuration.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessors/VisionCameraProxy.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/VideoStabilizationMode.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/DynamicRange+isSDR.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/FpsSampleCollector.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/CameraView.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/ImageCapture+takePicture.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/react/CameraView+TakePhoto.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/SnapshotOptions.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/VideoRecordEvent+toCameraError.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/extensions/ResolutionSelector+forSize.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/AutoFocusSystem.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/utils/CamcorderProfileUtils.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/types/VideoFileType.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/utils/FileUtils.kt
+/Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/core/CameraSession+Photo.kt
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/android/build/kotlin/compileDebugKotlin/local-state/build-history.bin b/node_modules/react-native-vision-camera/android/build/kotlin/compileDebugKotlin/local-state/build-history.bin
new file mode 100644
index 0000000..4cda22f
Binary files /dev/null and b/node_modules/react-native-vision-camera/android/build/kotlin/compileDebugKotlin/local-state/build-history.bin differ
diff --git a/node_modules/react-native-vision-camera/android/build/outputs/logs/manifest-merger-debug-report.txt b/node_modules/react-native-vision-camera/android/build/outputs/logs/manifest-merger-debug-report.txt
new file mode 100644
index 0000000..b1bdfa2
--- /dev/null
+++ b/node_modules/react-native-vision-camera/android/build/outputs/logs/manifest-merger-debug-report.txt
@@ -0,0 +1,16 @@
+-- Merging decision tree log ---
+manifest
+ADDED from /Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/AndroidManifest.xml:1:1-3:12
+INJECTED from /Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/AndroidManifest.xml:1:1-3:12
+	package
+		INJECTED from /Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/AndroidManifest.xml
+	xmlns:android
+		ADDED from /Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/AndroidManifest.xml:1:11-69
+uses-sdk
+INJECTED from /Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from /Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/AndroidManifest.xml
+INJECTED from /Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from /Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from /Users/kele/Projects/react-native/AwesomeCameraApp/node_modules/react-native-vision-camera/android/src/main/AndroidManifest.xml
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessors/VisionCameraProxy.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessors/VisionCameraProxy.kt
index d697bef..8de418b 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessors/VisionCameraProxy.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessors/VisionCameraProxy.kt
@@ -7,12 +7,14 @@ import com.facebook.jni.HybridData
 import com.facebook.proguard.annotations.DoNotStrip
 import com.facebook.react.bridge.ReactApplicationContext
 import com.facebook.react.bridge.UiThreadUtil
+import com.facebook.react.common.annotations.FrameworkAPI
 import com.facebook.react.turbomodule.core.CallInvokerHolderImpl
 import com.facebook.react.uimanager.UIManagerHelper
 import com.mrousavy.camera.core.ViewNotFoundError
 import com.mrousavy.camera.react.CameraView
 import java.lang.ref.WeakReference
 
+@OptIn(FrameworkAPI::class)
 @Suppress("KotlinJniMissingFunction") // we use fbjni.
 class VisionCameraProxy(private val reactContext: ReactApplicationContext) {
   companion object {
